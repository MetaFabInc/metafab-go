/*
MetaFab API

 Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.4.0
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// BatchTransferCollectionItemsRequest struct for BatchTransferCollectionItemsRequest
type BatchTransferCollectionItemsRequest struct {
	// An array of valid EVM based addresses to transfer items to.
	Addresses []string `json:"addresses,omitempty"`
	// An array of wallet ids within the MetaFab ecosystem to transfer items to.
	WalletIds []string `json:"walletIds,omitempty"`
	// An array of unique itemIds to transfer. Each recipient will receive the same set of items provided.
	ItemIds []int32 `json:"itemIds"`
	// The quantities of each unique itemId to transfer. Each recipient will receive the same quantities of items provided.
	Quantities []int32 `json:"quantities"`
}

// NewBatchTransferCollectionItemsRequest instantiates a new BatchTransferCollectionItemsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchTransferCollectionItemsRequest(itemIds []int32, quantities []int32) *BatchTransferCollectionItemsRequest {
	this := BatchTransferCollectionItemsRequest{}
	this.ItemIds = itemIds
	this.Quantities = quantities
	return &this
}

// NewBatchTransferCollectionItemsRequestWithDefaults instantiates a new BatchTransferCollectionItemsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchTransferCollectionItemsRequestWithDefaults() *BatchTransferCollectionItemsRequest {
	this := BatchTransferCollectionItemsRequest{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *BatchTransferCollectionItemsRequest) GetAddresses() []string {
	if o == nil || o.Addresses == nil {
		var ret []string
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchTransferCollectionItemsRequest) GetAddressesOk() ([]string, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *BatchTransferCollectionItemsRequest) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []string and assigns it to the Addresses field.
func (o *BatchTransferCollectionItemsRequest) SetAddresses(v []string) {
	o.Addresses = v
}

// GetWalletIds returns the WalletIds field value if set, zero value otherwise.
func (o *BatchTransferCollectionItemsRequest) GetWalletIds() []string {
	if o == nil || o.WalletIds == nil {
		var ret []string
		return ret
	}
	return o.WalletIds
}

// GetWalletIdsOk returns a tuple with the WalletIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchTransferCollectionItemsRequest) GetWalletIdsOk() ([]string, bool) {
	if o == nil || o.WalletIds == nil {
		return nil, false
	}
	return o.WalletIds, true
}

// HasWalletIds returns a boolean if a field has been set.
func (o *BatchTransferCollectionItemsRequest) HasWalletIds() bool {
	if o != nil && o.WalletIds != nil {
		return true
	}

	return false
}

// SetWalletIds gets a reference to the given []string and assigns it to the WalletIds field.
func (o *BatchTransferCollectionItemsRequest) SetWalletIds(v []string) {
	o.WalletIds = v
}

// GetItemIds returns the ItemIds field value
func (o *BatchTransferCollectionItemsRequest) GetItemIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ItemIds
}

// GetItemIdsOk returns a tuple with the ItemIds field value
// and a boolean to check if the value has been set.
func (o *BatchTransferCollectionItemsRequest) GetItemIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemIds, true
}

// SetItemIds sets field value
func (o *BatchTransferCollectionItemsRequest) SetItemIds(v []int32) {
	o.ItemIds = v
}

// GetQuantities returns the Quantities field value
func (o *BatchTransferCollectionItemsRequest) GetQuantities() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Quantities
}

// GetQuantitiesOk returns a tuple with the Quantities field value
// and a boolean to check if the value has been set.
func (o *BatchTransferCollectionItemsRequest) GetQuantitiesOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quantities, true
}

// SetQuantities sets field value
func (o *BatchTransferCollectionItemsRequest) SetQuantities(v []int32) {
	o.Quantities = v
}

func (o BatchTransferCollectionItemsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if o.WalletIds != nil {
		toSerialize["walletIds"] = o.WalletIds
	}
	if true {
		toSerialize["itemIds"] = o.ItemIds
	}
	if true {
		toSerialize["quantities"] = o.Quantities
	}
	return json.Marshal(toSerialize)
}

type NullableBatchTransferCollectionItemsRequest struct {
	value *BatchTransferCollectionItemsRequest
	isSet bool
}

func (v NullableBatchTransferCollectionItemsRequest) Get() *BatchTransferCollectionItemsRequest {
	return v.value
}

func (v *NullableBatchTransferCollectionItemsRequest) Set(val *BatchTransferCollectionItemsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchTransferCollectionItemsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchTransferCollectionItemsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchTransferCollectionItemsRequest(val *BatchTransferCollectionItemsRequest) *NullableBatchTransferCollectionItemsRequest {
	return &NullableBatchTransferCollectionItemsRequest{value: val, isSet: true}
}

func (v NullableBatchTransferCollectionItemsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchTransferCollectionItemsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


