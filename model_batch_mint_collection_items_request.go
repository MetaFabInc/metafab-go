/*
MetaFab API

 Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.4.0
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// BatchMintCollectionItemsRequest struct for BatchMintCollectionItemsRequest
type BatchMintCollectionItemsRequest struct {
	// A valid EVM based address to create (mint) the items for. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`.
	Address *string `json:"address,omitempty"`
	// An array of unique itemIds to create (mint).
	ItemIds []int32 `json:"itemIds"`
	// An array of the quantities of each of the unique itemIds provided to create (mint). The quantity of each itemId in itemIds should be at the same index as the specific itemId in the itemIds array. For example, quantities[2] defines the quantity to mint for itemIds[2], etc.
	Quantities []int32 `json:"quantities"`
	// Any wallet id within the MetaFab ecosystem to create (mint) the items for.
	WalletId *string `json:"walletId,omitempty"`
}

// NewBatchMintCollectionItemsRequest instantiates a new BatchMintCollectionItemsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchMintCollectionItemsRequest(itemIds []int32, quantities []int32) *BatchMintCollectionItemsRequest {
	this := BatchMintCollectionItemsRequest{}
	this.ItemIds = itemIds
	this.Quantities = quantities
	return &this
}

// NewBatchMintCollectionItemsRequestWithDefaults instantiates a new BatchMintCollectionItemsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchMintCollectionItemsRequestWithDefaults() *BatchMintCollectionItemsRequest {
	this := BatchMintCollectionItemsRequest{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *BatchMintCollectionItemsRequest) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchMintCollectionItemsRequest) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *BatchMintCollectionItemsRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *BatchMintCollectionItemsRequest) SetAddress(v string) {
	o.Address = &v
}

// GetItemIds returns the ItemIds field value
func (o *BatchMintCollectionItemsRequest) GetItemIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ItemIds
}

// GetItemIdsOk returns a tuple with the ItemIds field value
// and a boolean to check if the value has been set.
func (o *BatchMintCollectionItemsRequest) GetItemIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemIds, true
}

// SetItemIds sets field value
func (o *BatchMintCollectionItemsRequest) SetItemIds(v []int32) {
	o.ItemIds = v
}

// GetQuantities returns the Quantities field value
func (o *BatchMintCollectionItemsRequest) GetQuantities() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Quantities
}

// GetQuantitiesOk returns a tuple with the Quantities field value
// and a boolean to check if the value has been set.
func (o *BatchMintCollectionItemsRequest) GetQuantitiesOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quantities, true
}

// SetQuantities sets field value
func (o *BatchMintCollectionItemsRequest) SetQuantities(v []int32) {
	o.Quantities = v
}

// GetWalletId returns the WalletId field value if set, zero value otherwise.
func (o *BatchMintCollectionItemsRequest) GetWalletId() string {
	if o == nil || o.WalletId == nil {
		var ret string
		return ret
	}
	return *o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchMintCollectionItemsRequest) GetWalletIdOk() (*string, bool) {
	if o == nil || o.WalletId == nil {
		return nil, false
	}
	return o.WalletId, true
}

// HasWalletId returns a boolean if a field has been set.
func (o *BatchMintCollectionItemsRequest) HasWalletId() bool {
	if o != nil && o.WalletId != nil {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given string and assigns it to the WalletId field.
func (o *BatchMintCollectionItemsRequest) SetWalletId(v string) {
	o.WalletId = &v
}

func (o BatchMintCollectionItemsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["itemIds"] = o.ItemIds
	}
	if true {
		toSerialize["quantities"] = o.Quantities
	}
	if o.WalletId != nil {
		toSerialize["walletId"] = o.WalletId
	}
	return json.Marshal(toSerialize)
}

type NullableBatchMintCollectionItemsRequest struct {
	value *BatchMintCollectionItemsRequest
	isSet bool
}

func (v NullableBatchMintCollectionItemsRequest) Get() *BatchMintCollectionItemsRequest {
	return v.value
}

func (v *NullableBatchMintCollectionItemsRequest) Set(val *BatchMintCollectionItemsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchMintCollectionItemsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchMintCollectionItemsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchMintCollectionItemsRequest(val *BatchMintCollectionItemsRequest) *NullableBatchMintCollectionItemsRequest {
	return &NullableBatchMintCollectionItemsRequest{value: val, isSet: true}
}

func (v NullableBatchMintCollectionItemsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchMintCollectionItemsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


