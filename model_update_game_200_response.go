/*
MetaFab API

Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.5.1
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// UpdateGame200Response struct for UpdateGame200Response
type UpdateGame200Response struct {
	// This field has not had a description added.
	Id *string `json:"id,omitempty"`
	// This field has not had a description added.
	WalletId *string `json:"walletId,omitempty"`
	// This field has not had a description added.
	FundingWalletId *string `json:"fundingWalletId,omitempty"`
	// This field has not had a description added.
	Email *string `json:"email,omitempty"`
	// This field has not had a description added.
	Name *string `json:"name,omitempty"`
	// This field has not had a description added.
	Rpcs map[string]interface{} `json:"rpcs,omitempty"`
	// This field has not had a description added.
	RedirectUris map[string]interface{} `json:"redirectUris,omitempty"`
	// This field has not had a description added.
	IconImageUrl *string `json:"iconImageUrl,omitempty"`
	// This field has not had a description added.
	CoverImageUrl *string `json:"coverImageUrl,omitempty"`
	// This field has not had a description added.
	PrimaryColorHex *string `json:"primaryColorHex,omitempty"`
	// This field has not had a description added.
	PublishedKey *string `json:"publishedKey,omitempty"`
	// This field has not had a description added.
	SecretKey *string `json:"secretKey,omitempty"`
	// This field has not had a description added.
	Verified *bool `json:"verified,omitempty"`
	// This field has not had a description added.
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// This field has not had a description added.
	CreatedAt *string `json:"createdAt,omitempty"`
	// This field has not had a description added.
	WalletDecryptKey *string `json:"walletDecryptKey,omitempty"`
}

// NewUpdateGame200Response instantiates a new UpdateGame200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGame200Response() *UpdateGame200Response {
	this := UpdateGame200Response{}
	return &this
}

// NewUpdateGame200ResponseWithDefaults instantiates a new UpdateGame200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGame200ResponseWithDefaults() *UpdateGame200Response {
	this := UpdateGame200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateGame200Response) SetId(v string) {
	o.Id = &v
}

// GetWalletId returns the WalletId field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetWalletId() string {
	if o == nil || isNil(o.WalletId) {
		var ret string
		return ret
	}
	return *o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetWalletIdOk() (*string, bool) {
	if o == nil || isNil(o.WalletId) {
    return nil, false
	}
	return o.WalletId, true
}

// HasWalletId returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasWalletId() bool {
	if o != nil && !isNil(o.WalletId) {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given string and assigns it to the WalletId field.
func (o *UpdateGame200Response) SetWalletId(v string) {
	o.WalletId = &v
}

// GetFundingWalletId returns the FundingWalletId field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetFundingWalletId() string {
	if o == nil || isNil(o.FundingWalletId) {
		var ret string
		return ret
	}
	return *o.FundingWalletId
}

// GetFundingWalletIdOk returns a tuple with the FundingWalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetFundingWalletIdOk() (*string, bool) {
	if o == nil || isNil(o.FundingWalletId) {
    return nil, false
	}
	return o.FundingWalletId, true
}

// HasFundingWalletId returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasFundingWalletId() bool {
	if o != nil && !isNil(o.FundingWalletId) {
		return true
	}

	return false
}

// SetFundingWalletId gets a reference to the given string and assigns it to the FundingWalletId field.
func (o *UpdateGame200Response) SetFundingWalletId(v string) {
	o.FundingWalletId = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UpdateGame200Response) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateGame200Response) SetName(v string) {
	o.Name = &v
}

// GetRpcs returns the Rpcs field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetRpcs() map[string]interface{} {
	if o == nil || isNil(o.Rpcs) {
		var ret map[string]interface{}
		return ret
	}
	return o.Rpcs
}

// GetRpcsOk returns a tuple with the Rpcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetRpcsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Rpcs) {
    return map[string]interface{}{}, false
	}
	return o.Rpcs, true
}

// HasRpcs returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasRpcs() bool {
	if o != nil && !isNil(o.Rpcs) {
		return true
	}

	return false
}

// SetRpcs gets a reference to the given map[string]interface{} and assigns it to the Rpcs field.
func (o *UpdateGame200Response) SetRpcs(v map[string]interface{}) {
	o.Rpcs = v
}

// GetRedirectUris returns the RedirectUris field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetRedirectUris() map[string]interface{} {
	if o == nil || isNil(o.RedirectUris) {
		var ret map[string]interface{}
		return ret
	}
	return o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetRedirectUrisOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.RedirectUris) {
    return map[string]interface{}{}, false
	}
	return o.RedirectUris, true
}

// HasRedirectUris returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasRedirectUris() bool {
	if o != nil && !isNil(o.RedirectUris) {
		return true
	}

	return false
}

// SetRedirectUris gets a reference to the given map[string]interface{} and assigns it to the RedirectUris field.
func (o *UpdateGame200Response) SetRedirectUris(v map[string]interface{}) {
	o.RedirectUris = v
}

// GetIconImageUrl returns the IconImageUrl field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetIconImageUrl() string {
	if o == nil || isNil(o.IconImageUrl) {
		var ret string
		return ret
	}
	return *o.IconImageUrl
}

// GetIconImageUrlOk returns a tuple with the IconImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetIconImageUrlOk() (*string, bool) {
	if o == nil || isNil(o.IconImageUrl) {
    return nil, false
	}
	return o.IconImageUrl, true
}

// HasIconImageUrl returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasIconImageUrl() bool {
	if o != nil && !isNil(o.IconImageUrl) {
		return true
	}

	return false
}

// SetIconImageUrl gets a reference to the given string and assigns it to the IconImageUrl field.
func (o *UpdateGame200Response) SetIconImageUrl(v string) {
	o.IconImageUrl = &v
}

// GetCoverImageUrl returns the CoverImageUrl field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetCoverImageUrl() string {
	if o == nil || isNil(o.CoverImageUrl) {
		var ret string
		return ret
	}
	return *o.CoverImageUrl
}

// GetCoverImageUrlOk returns a tuple with the CoverImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetCoverImageUrlOk() (*string, bool) {
	if o == nil || isNil(o.CoverImageUrl) {
    return nil, false
	}
	return o.CoverImageUrl, true
}

// HasCoverImageUrl returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasCoverImageUrl() bool {
	if o != nil && !isNil(o.CoverImageUrl) {
		return true
	}

	return false
}

// SetCoverImageUrl gets a reference to the given string and assigns it to the CoverImageUrl field.
func (o *UpdateGame200Response) SetCoverImageUrl(v string) {
	o.CoverImageUrl = &v
}

// GetPrimaryColorHex returns the PrimaryColorHex field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetPrimaryColorHex() string {
	if o == nil || isNil(o.PrimaryColorHex) {
		var ret string
		return ret
	}
	return *o.PrimaryColorHex
}

// GetPrimaryColorHexOk returns a tuple with the PrimaryColorHex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetPrimaryColorHexOk() (*string, bool) {
	if o == nil || isNil(o.PrimaryColorHex) {
    return nil, false
	}
	return o.PrimaryColorHex, true
}

// HasPrimaryColorHex returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasPrimaryColorHex() bool {
	if o != nil && !isNil(o.PrimaryColorHex) {
		return true
	}

	return false
}

// SetPrimaryColorHex gets a reference to the given string and assigns it to the PrimaryColorHex field.
func (o *UpdateGame200Response) SetPrimaryColorHex(v string) {
	o.PrimaryColorHex = &v
}

// GetPublishedKey returns the PublishedKey field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetPublishedKey() string {
	if o == nil || isNil(o.PublishedKey) {
		var ret string
		return ret
	}
	return *o.PublishedKey
}

// GetPublishedKeyOk returns a tuple with the PublishedKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetPublishedKeyOk() (*string, bool) {
	if o == nil || isNil(o.PublishedKey) {
    return nil, false
	}
	return o.PublishedKey, true
}

// HasPublishedKey returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasPublishedKey() bool {
	if o != nil && !isNil(o.PublishedKey) {
		return true
	}

	return false
}

// SetPublishedKey gets a reference to the given string and assigns it to the PublishedKey field.
func (o *UpdateGame200Response) SetPublishedKey(v string) {
	o.PublishedKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetSecretKey() string {
	if o == nil || isNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetSecretKeyOk() (*string, bool) {
	if o == nil || isNil(o.SecretKey) {
    return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasSecretKey() bool {
	if o != nil && !isNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *UpdateGame200Response) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetVerified() bool {
	if o == nil || isNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetVerifiedOk() (*bool, bool) {
	if o == nil || isNil(o.Verified) {
    return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasVerified() bool {
	if o != nil && !isNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *UpdateGame200Response) SetVerified(v bool) {
	o.Verified = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetUpdatedAt() string {
	if o == nil || isNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetUpdatedAtOk() (*string, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *UpdateGame200Response) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *UpdateGame200Response) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetWalletDecryptKey returns the WalletDecryptKey field value if set, zero value otherwise.
func (o *UpdateGame200Response) GetWalletDecryptKey() string {
	if o == nil || isNil(o.WalletDecryptKey) {
		var ret string
		return ret
	}
	return *o.WalletDecryptKey
}

// GetWalletDecryptKeyOk returns a tuple with the WalletDecryptKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGame200Response) GetWalletDecryptKeyOk() (*string, bool) {
	if o == nil || isNil(o.WalletDecryptKey) {
    return nil, false
	}
	return o.WalletDecryptKey, true
}

// HasWalletDecryptKey returns a boolean if a field has been set.
func (o *UpdateGame200Response) HasWalletDecryptKey() bool {
	if o != nil && !isNil(o.WalletDecryptKey) {
		return true
	}

	return false
}

// SetWalletDecryptKey gets a reference to the given string and assigns it to the WalletDecryptKey field.
func (o *UpdateGame200Response) SetWalletDecryptKey(v string) {
	o.WalletDecryptKey = &v
}

func (o UpdateGame200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.WalletId) {
		toSerialize["walletId"] = o.WalletId
	}
	if !isNil(o.FundingWalletId) {
		toSerialize["fundingWalletId"] = o.FundingWalletId
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Rpcs) {
		toSerialize["rpcs"] = o.Rpcs
	}
	if !isNil(o.RedirectUris) {
		toSerialize["redirectUris"] = o.RedirectUris
	}
	if !isNil(o.IconImageUrl) {
		toSerialize["iconImageUrl"] = o.IconImageUrl
	}
	if !isNil(o.CoverImageUrl) {
		toSerialize["coverImageUrl"] = o.CoverImageUrl
	}
	if !isNil(o.PrimaryColorHex) {
		toSerialize["primaryColorHex"] = o.PrimaryColorHex
	}
	if !isNil(o.PublishedKey) {
		toSerialize["publishedKey"] = o.PublishedKey
	}
	if !isNil(o.SecretKey) {
		toSerialize["secretKey"] = o.SecretKey
	}
	if !isNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.WalletDecryptKey) {
		toSerialize["walletDecryptKey"] = o.WalletDecryptKey
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateGame200Response struct {
	value *UpdateGame200Response
	isSet bool
}

func (v NullableUpdateGame200Response) Get() *UpdateGame200Response {
	return v.value
}

func (v *NullableUpdateGame200Response) Set(val *UpdateGame200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGame200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGame200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGame200Response(val *UpdateGame200Response) *NullableUpdateGame200Response {
	return &NullableUpdateGame200Response{value: val, isSet: true}
}

func (v NullableUpdateGame200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGame200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


