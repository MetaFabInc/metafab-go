/*
MetaFab API

Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.5.1
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// LootboxManagerLootbox struct for LootboxManagerLootbox
type LootboxManagerLootbox struct {
	// The id of this lootbox.
	Id *int32 `json:"id,omitempty"`
	// The address of the ERC1155 or MetaFab game items contract for input items required by this lootbox.
	InputCollection *string `json:"inputCollection,omitempty"`
	// An array of item ids from the input collection that are required for this lootbox.
	InputCollectionItemIds []int32 `json:"inputCollectionItemIds,omitempty"`
	// An array of amounts for each item id for the input collection that are required to open this lootbox.
	InputCollectionItemAmounts []int32 `json:"inputCollectionItemAmounts,omitempty"`
	// The address of the ERC1155 of MetaFab game items contract for possible output items given by this lootbox.
	OutputCollection *string `json:"outputCollection,omitempty"`
	// An array of item ids from the output collection that are possibly given by this lootbox.
	OutputCollectionItemIds []int32 `json:"outputCollectionItemIds,omitempty"`
	// An array of amounts for each item id for the output collection that are possibly given by this lootbox.
	OutputCollectionItemAmounts []int32 `json:"outputCollectionItemAmounts,omitempty"`
	// An array of weights for each item id for the output collection that are possibly given by this lootbox.
	OutputCollectionItemWeights []int32 `json:"outputCollectionItemWeights,omitempty"`
	// The number of items randomly selected when this lootbox is opened.
	OutputTotalItems *int32 `json:"outputTotalItems,omitempty"`
	// A unix timestamp in seconds that represents the last time this offer was set or updated.
	LastUpdatedAt *int32 `json:"lastUpdatedAt,omitempty"`
}

// NewLootboxManagerLootbox instantiates a new LootboxManagerLootbox object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLootboxManagerLootbox() *LootboxManagerLootbox {
	this := LootboxManagerLootbox{}
	return &this
}

// NewLootboxManagerLootboxWithDefaults instantiates a new LootboxManagerLootbox object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLootboxManagerLootboxWithDefaults() *LootboxManagerLootbox {
	this := LootboxManagerLootbox{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LootboxManagerLootbox) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LootboxManagerLootbox) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LootboxManagerLootbox) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *LootboxManagerLootbox) SetId(v int32) {
	o.Id = &v
}

// GetInputCollection returns the InputCollection field value if set, zero value otherwise.
func (o *LootboxManagerLootbox) GetInputCollection() string {
	if o == nil || isNil(o.InputCollection) {
		var ret string
		return ret
	}
	return *o.InputCollection
}

// GetInputCollectionOk returns a tuple with the InputCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LootboxManagerLootbox) GetInputCollectionOk() (*string, bool) {
	if o == nil || isNil(o.InputCollection) {
    return nil, false
	}
	return o.InputCollection, true
}

// HasInputCollection returns a boolean if a field has been set.
func (o *LootboxManagerLootbox) HasInputCollection() bool {
	if o != nil && !isNil(o.InputCollection) {
		return true
	}

	return false
}

// SetInputCollection gets a reference to the given string and assigns it to the InputCollection field.
func (o *LootboxManagerLootbox) SetInputCollection(v string) {
	o.InputCollection = &v
}

// GetInputCollectionItemIds returns the InputCollectionItemIds field value if set, zero value otherwise.
func (o *LootboxManagerLootbox) GetInputCollectionItemIds() []int32 {
	if o == nil || isNil(o.InputCollectionItemIds) {
		var ret []int32
		return ret
	}
	return o.InputCollectionItemIds
}

// GetInputCollectionItemIdsOk returns a tuple with the InputCollectionItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LootboxManagerLootbox) GetInputCollectionItemIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.InputCollectionItemIds) {
    return nil, false
	}
	return o.InputCollectionItemIds, true
}

// HasInputCollectionItemIds returns a boolean if a field has been set.
func (o *LootboxManagerLootbox) HasInputCollectionItemIds() bool {
	if o != nil && !isNil(o.InputCollectionItemIds) {
		return true
	}

	return false
}

// SetInputCollectionItemIds gets a reference to the given []int32 and assigns it to the InputCollectionItemIds field.
func (o *LootboxManagerLootbox) SetInputCollectionItemIds(v []int32) {
	o.InputCollectionItemIds = v
}

// GetInputCollectionItemAmounts returns the InputCollectionItemAmounts field value if set, zero value otherwise.
func (o *LootboxManagerLootbox) GetInputCollectionItemAmounts() []int32 {
	if o == nil || isNil(o.InputCollectionItemAmounts) {
		var ret []int32
		return ret
	}
	return o.InputCollectionItemAmounts
}

// GetInputCollectionItemAmountsOk returns a tuple with the InputCollectionItemAmounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LootboxManagerLootbox) GetInputCollectionItemAmountsOk() ([]int32, bool) {
	if o == nil || isNil(o.InputCollectionItemAmounts) {
    return nil, false
	}
	return o.InputCollectionItemAmounts, true
}

// HasInputCollectionItemAmounts returns a boolean if a field has been set.
func (o *LootboxManagerLootbox) HasInputCollectionItemAmounts() bool {
	if o != nil && !isNil(o.InputCollectionItemAmounts) {
		return true
	}

	return false
}

// SetInputCollectionItemAmounts gets a reference to the given []int32 and assigns it to the InputCollectionItemAmounts field.
func (o *LootboxManagerLootbox) SetInputCollectionItemAmounts(v []int32) {
	o.InputCollectionItemAmounts = v
}

// GetOutputCollection returns the OutputCollection field value if set, zero value otherwise.
func (o *LootboxManagerLootbox) GetOutputCollection() string {
	if o == nil || isNil(o.OutputCollection) {
		var ret string
		return ret
	}
	return *o.OutputCollection
}

// GetOutputCollectionOk returns a tuple with the OutputCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LootboxManagerLootbox) GetOutputCollectionOk() (*string, bool) {
	if o == nil || isNil(o.OutputCollection) {
    return nil, false
	}
	return o.OutputCollection, true
}

// HasOutputCollection returns a boolean if a field has been set.
func (o *LootboxManagerLootbox) HasOutputCollection() bool {
	if o != nil && !isNil(o.OutputCollection) {
		return true
	}

	return false
}

// SetOutputCollection gets a reference to the given string and assigns it to the OutputCollection field.
func (o *LootboxManagerLootbox) SetOutputCollection(v string) {
	o.OutputCollection = &v
}

// GetOutputCollectionItemIds returns the OutputCollectionItemIds field value if set, zero value otherwise.
func (o *LootboxManagerLootbox) GetOutputCollectionItemIds() []int32 {
	if o == nil || isNil(o.OutputCollectionItemIds) {
		var ret []int32
		return ret
	}
	return o.OutputCollectionItemIds
}

// GetOutputCollectionItemIdsOk returns a tuple with the OutputCollectionItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LootboxManagerLootbox) GetOutputCollectionItemIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.OutputCollectionItemIds) {
    return nil, false
	}
	return o.OutputCollectionItemIds, true
}

// HasOutputCollectionItemIds returns a boolean if a field has been set.
func (o *LootboxManagerLootbox) HasOutputCollectionItemIds() bool {
	if o != nil && !isNil(o.OutputCollectionItemIds) {
		return true
	}

	return false
}

// SetOutputCollectionItemIds gets a reference to the given []int32 and assigns it to the OutputCollectionItemIds field.
func (o *LootboxManagerLootbox) SetOutputCollectionItemIds(v []int32) {
	o.OutputCollectionItemIds = v
}

// GetOutputCollectionItemAmounts returns the OutputCollectionItemAmounts field value if set, zero value otherwise.
func (o *LootboxManagerLootbox) GetOutputCollectionItemAmounts() []int32 {
	if o == nil || isNil(o.OutputCollectionItemAmounts) {
		var ret []int32
		return ret
	}
	return o.OutputCollectionItemAmounts
}

// GetOutputCollectionItemAmountsOk returns a tuple with the OutputCollectionItemAmounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LootboxManagerLootbox) GetOutputCollectionItemAmountsOk() ([]int32, bool) {
	if o == nil || isNil(o.OutputCollectionItemAmounts) {
    return nil, false
	}
	return o.OutputCollectionItemAmounts, true
}

// HasOutputCollectionItemAmounts returns a boolean if a field has been set.
func (o *LootboxManagerLootbox) HasOutputCollectionItemAmounts() bool {
	if o != nil && !isNil(o.OutputCollectionItemAmounts) {
		return true
	}

	return false
}

// SetOutputCollectionItemAmounts gets a reference to the given []int32 and assigns it to the OutputCollectionItemAmounts field.
func (o *LootboxManagerLootbox) SetOutputCollectionItemAmounts(v []int32) {
	o.OutputCollectionItemAmounts = v
}

// GetOutputCollectionItemWeights returns the OutputCollectionItemWeights field value if set, zero value otherwise.
func (o *LootboxManagerLootbox) GetOutputCollectionItemWeights() []int32 {
	if o == nil || isNil(o.OutputCollectionItemWeights) {
		var ret []int32
		return ret
	}
	return o.OutputCollectionItemWeights
}

// GetOutputCollectionItemWeightsOk returns a tuple with the OutputCollectionItemWeights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LootboxManagerLootbox) GetOutputCollectionItemWeightsOk() ([]int32, bool) {
	if o == nil || isNil(o.OutputCollectionItemWeights) {
    return nil, false
	}
	return o.OutputCollectionItemWeights, true
}

// HasOutputCollectionItemWeights returns a boolean if a field has been set.
func (o *LootboxManagerLootbox) HasOutputCollectionItemWeights() bool {
	if o != nil && !isNil(o.OutputCollectionItemWeights) {
		return true
	}

	return false
}

// SetOutputCollectionItemWeights gets a reference to the given []int32 and assigns it to the OutputCollectionItemWeights field.
func (o *LootboxManagerLootbox) SetOutputCollectionItemWeights(v []int32) {
	o.OutputCollectionItemWeights = v
}

// GetOutputTotalItems returns the OutputTotalItems field value if set, zero value otherwise.
func (o *LootboxManagerLootbox) GetOutputTotalItems() int32 {
	if o == nil || isNil(o.OutputTotalItems) {
		var ret int32
		return ret
	}
	return *o.OutputTotalItems
}

// GetOutputTotalItemsOk returns a tuple with the OutputTotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LootboxManagerLootbox) GetOutputTotalItemsOk() (*int32, bool) {
	if o == nil || isNil(o.OutputTotalItems) {
    return nil, false
	}
	return o.OutputTotalItems, true
}

// HasOutputTotalItems returns a boolean if a field has been set.
func (o *LootboxManagerLootbox) HasOutputTotalItems() bool {
	if o != nil && !isNil(o.OutputTotalItems) {
		return true
	}

	return false
}

// SetOutputTotalItems gets a reference to the given int32 and assigns it to the OutputTotalItems field.
func (o *LootboxManagerLootbox) SetOutputTotalItems(v int32) {
	o.OutputTotalItems = &v
}

// GetLastUpdatedAt returns the LastUpdatedAt field value if set, zero value otherwise.
func (o *LootboxManagerLootbox) GetLastUpdatedAt() int32 {
	if o == nil || isNil(o.LastUpdatedAt) {
		var ret int32
		return ret
	}
	return *o.LastUpdatedAt
}

// GetLastUpdatedAtOk returns a tuple with the LastUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LootboxManagerLootbox) GetLastUpdatedAtOk() (*int32, bool) {
	if o == nil || isNil(o.LastUpdatedAt) {
    return nil, false
	}
	return o.LastUpdatedAt, true
}

// HasLastUpdatedAt returns a boolean if a field has been set.
func (o *LootboxManagerLootbox) HasLastUpdatedAt() bool {
	if o != nil && !isNil(o.LastUpdatedAt) {
		return true
	}

	return false
}

// SetLastUpdatedAt gets a reference to the given int32 and assigns it to the LastUpdatedAt field.
func (o *LootboxManagerLootbox) SetLastUpdatedAt(v int32) {
	o.LastUpdatedAt = &v
}

func (o LootboxManagerLootbox) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.InputCollection) {
		toSerialize["inputCollection"] = o.InputCollection
	}
	if !isNil(o.InputCollectionItemIds) {
		toSerialize["inputCollectionItemIds"] = o.InputCollectionItemIds
	}
	if !isNil(o.InputCollectionItemAmounts) {
		toSerialize["inputCollectionItemAmounts"] = o.InputCollectionItemAmounts
	}
	if !isNil(o.OutputCollection) {
		toSerialize["outputCollection"] = o.OutputCollection
	}
	if !isNil(o.OutputCollectionItemIds) {
		toSerialize["outputCollectionItemIds"] = o.OutputCollectionItemIds
	}
	if !isNil(o.OutputCollectionItemAmounts) {
		toSerialize["outputCollectionItemAmounts"] = o.OutputCollectionItemAmounts
	}
	if !isNil(o.OutputCollectionItemWeights) {
		toSerialize["outputCollectionItemWeights"] = o.OutputCollectionItemWeights
	}
	if !isNil(o.OutputTotalItems) {
		toSerialize["outputTotalItems"] = o.OutputTotalItems
	}
	if !isNil(o.LastUpdatedAt) {
		toSerialize["lastUpdatedAt"] = o.LastUpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableLootboxManagerLootbox struct {
	value *LootboxManagerLootbox
	isSet bool
}

func (v NullableLootboxManagerLootbox) Get() *LootboxManagerLootbox {
	return v.value
}

func (v *NullableLootboxManagerLootbox) Set(val *LootboxManagerLootbox) {
	v.value = val
	v.isSet = true
}

func (v NullableLootboxManagerLootbox) IsSet() bool {
	return v.isSet
}

func (v *NullableLootboxManagerLootbox) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLootboxManagerLootbox(val *LootboxManagerLootbox) *NullableLootboxManagerLootbox {
	return &NullableLootboxManagerLootbox{value: val, isSet: true}
}

func (v NullableLootboxManagerLootbox) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLootboxManagerLootbox) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


