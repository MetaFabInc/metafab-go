/*
MetaFab API

 Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.4.1
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// WriteContractRequest struct for WriteContractRequest
type WriteContractRequest struct {
	// A contract function name. This can be any valid function from the the ABI of the contract you are interacting with. For example, `mint`.
	Func string `json:"func"`
	// An array of args. This is optional and only necessary if the function being invoked requires arguments per the contract ABI. For example, `[123, \"Hello\", false]`.
	Args []WriteContractRequestArgsInner `json:"args,omitempty"`
}

// NewWriteContractRequest instantiates a new WriteContractRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWriteContractRequest(func_ string) *WriteContractRequest {
	this := WriteContractRequest{}
	this.Func = func_
	return &this
}

// NewWriteContractRequestWithDefaults instantiates a new WriteContractRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteContractRequestWithDefaults() *WriteContractRequest {
	this := WriteContractRequest{}
	return &this
}

// GetFunc returns the Func field value
func (o *WriteContractRequest) GetFunc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Func
}

// GetFuncOk returns a tuple with the Func field value
// and a boolean to check if the value has been set.
func (o *WriteContractRequest) GetFuncOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Func, true
}

// SetFunc sets field value
func (o *WriteContractRequest) SetFunc(v string) {
	o.Func = v
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *WriteContractRequest) GetArgs() []WriteContractRequestArgsInner {
	if o == nil || o.Args == nil {
		var ret []WriteContractRequestArgsInner
		return ret
	}
	return o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WriteContractRequest) GetArgsOk() ([]WriteContractRequestArgsInner, bool) {
	if o == nil || o.Args == nil {
		return nil, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *WriteContractRequest) HasArgs() bool {
	if o != nil && o.Args != nil {
		return true
	}

	return false
}

// SetArgs gets a reference to the given []WriteContractRequestArgsInner and assigns it to the Args field.
func (o *WriteContractRequest) SetArgs(v []WriteContractRequestArgsInner) {
	o.Args = v
}

func (o WriteContractRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["func"] = o.Func
	}
	if o.Args != nil {
		toSerialize["args"] = o.Args
	}
	return json.Marshal(toSerialize)
}

type NullableWriteContractRequest struct {
	value *WriteContractRequest
	isSet bool
}

func (v NullableWriteContractRequest) Get() *WriteContractRequest {
	return v.value
}

func (v *NullableWriteContractRequest) Set(val *WriteContractRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWriteContractRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWriteContractRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWriteContractRequest(val *WriteContractRequest) *NullableWriteContractRequest {
	return &NullableWriteContractRequest{value: val, isSet: true}
}

func (v NullableWriteContractRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWriteContractRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


