/*
MetaFab API

Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.5.1
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// EcosystemModel struct for EcosystemModel
type EcosystemModel struct {
	// This field has not had a description added.
	Id *string `json:"id,omitempty"`
	// This field has not had a description added.
	Email *string `json:"email,omitempty"`
	// This field has not had a description added.
	Name *string `json:"name,omitempty"`
	// This field has not had a description added.
	IconImageUrl *string `json:"iconImageUrl,omitempty"`
	// This field has not had a description added.
	CoverImageUrl *string `json:"coverImageUrl,omitempty"`
	// This field has not had a description added.
	PrimaryColorHex *string `json:"primaryColorHex,omitempty"`
	// This field has not had a description added.
	PublishedKey *string `json:"publishedKey,omitempty"`
	// This field has not had a description added.
	SecretKey *string `json:"secretKey,omitempty"`
	// This field has not had a description added.
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// This field has not had a description added.
	CreatedAt *string `json:"createdAt,omitempty"`
}

// NewEcosystemModel instantiates a new EcosystemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEcosystemModel() *EcosystemModel {
	this := EcosystemModel{}
	return &this
}

// NewEcosystemModelWithDefaults instantiates a new EcosystemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEcosystemModelWithDefaults() *EcosystemModel {
	this := EcosystemModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EcosystemModel) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcosystemModel) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EcosystemModel) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EcosystemModel) SetId(v string) {
	o.Id = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *EcosystemModel) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcosystemModel) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *EcosystemModel) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *EcosystemModel) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EcosystemModel) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcosystemModel) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EcosystemModel) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EcosystemModel) SetName(v string) {
	o.Name = &v
}

// GetIconImageUrl returns the IconImageUrl field value if set, zero value otherwise.
func (o *EcosystemModel) GetIconImageUrl() string {
	if o == nil || isNil(o.IconImageUrl) {
		var ret string
		return ret
	}
	return *o.IconImageUrl
}

// GetIconImageUrlOk returns a tuple with the IconImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcosystemModel) GetIconImageUrlOk() (*string, bool) {
	if o == nil || isNil(o.IconImageUrl) {
    return nil, false
	}
	return o.IconImageUrl, true
}

// HasIconImageUrl returns a boolean if a field has been set.
func (o *EcosystemModel) HasIconImageUrl() bool {
	if o != nil && !isNil(o.IconImageUrl) {
		return true
	}

	return false
}

// SetIconImageUrl gets a reference to the given string and assigns it to the IconImageUrl field.
func (o *EcosystemModel) SetIconImageUrl(v string) {
	o.IconImageUrl = &v
}

// GetCoverImageUrl returns the CoverImageUrl field value if set, zero value otherwise.
func (o *EcosystemModel) GetCoverImageUrl() string {
	if o == nil || isNil(o.CoverImageUrl) {
		var ret string
		return ret
	}
	return *o.CoverImageUrl
}

// GetCoverImageUrlOk returns a tuple with the CoverImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcosystemModel) GetCoverImageUrlOk() (*string, bool) {
	if o == nil || isNil(o.CoverImageUrl) {
    return nil, false
	}
	return o.CoverImageUrl, true
}

// HasCoverImageUrl returns a boolean if a field has been set.
func (o *EcosystemModel) HasCoverImageUrl() bool {
	if o != nil && !isNil(o.CoverImageUrl) {
		return true
	}

	return false
}

// SetCoverImageUrl gets a reference to the given string and assigns it to the CoverImageUrl field.
func (o *EcosystemModel) SetCoverImageUrl(v string) {
	o.CoverImageUrl = &v
}

// GetPrimaryColorHex returns the PrimaryColorHex field value if set, zero value otherwise.
func (o *EcosystemModel) GetPrimaryColorHex() string {
	if o == nil || isNil(o.PrimaryColorHex) {
		var ret string
		return ret
	}
	return *o.PrimaryColorHex
}

// GetPrimaryColorHexOk returns a tuple with the PrimaryColorHex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcosystemModel) GetPrimaryColorHexOk() (*string, bool) {
	if o == nil || isNil(o.PrimaryColorHex) {
    return nil, false
	}
	return o.PrimaryColorHex, true
}

// HasPrimaryColorHex returns a boolean if a field has been set.
func (o *EcosystemModel) HasPrimaryColorHex() bool {
	if o != nil && !isNil(o.PrimaryColorHex) {
		return true
	}

	return false
}

// SetPrimaryColorHex gets a reference to the given string and assigns it to the PrimaryColorHex field.
func (o *EcosystemModel) SetPrimaryColorHex(v string) {
	o.PrimaryColorHex = &v
}

// GetPublishedKey returns the PublishedKey field value if set, zero value otherwise.
func (o *EcosystemModel) GetPublishedKey() string {
	if o == nil || isNil(o.PublishedKey) {
		var ret string
		return ret
	}
	return *o.PublishedKey
}

// GetPublishedKeyOk returns a tuple with the PublishedKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcosystemModel) GetPublishedKeyOk() (*string, bool) {
	if o == nil || isNil(o.PublishedKey) {
    return nil, false
	}
	return o.PublishedKey, true
}

// HasPublishedKey returns a boolean if a field has been set.
func (o *EcosystemModel) HasPublishedKey() bool {
	if o != nil && !isNil(o.PublishedKey) {
		return true
	}

	return false
}

// SetPublishedKey gets a reference to the given string and assigns it to the PublishedKey field.
func (o *EcosystemModel) SetPublishedKey(v string) {
	o.PublishedKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *EcosystemModel) GetSecretKey() string {
	if o == nil || isNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcosystemModel) GetSecretKeyOk() (*string, bool) {
	if o == nil || isNil(o.SecretKey) {
    return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *EcosystemModel) HasSecretKey() bool {
	if o != nil && !isNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *EcosystemModel) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *EcosystemModel) GetUpdatedAt() string {
	if o == nil || isNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcosystemModel) GetUpdatedAtOk() (*string, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *EcosystemModel) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *EcosystemModel) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *EcosystemModel) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcosystemModel) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *EcosystemModel) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *EcosystemModel) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

func (o EcosystemModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.IconImageUrl) {
		toSerialize["iconImageUrl"] = o.IconImageUrl
	}
	if !isNil(o.CoverImageUrl) {
		toSerialize["coverImageUrl"] = o.CoverImageUrl
	}
	if !isNil(o.PrimaryColorHex) {
		toSerialize["primaryColorHex"] = o.PrimaryColorHex
	}
	if !isNil(o.PublishedKey) {
		toSerialize["publishedKey"] = o.PublishedKey
	}
	if !isNil(o.SecretKey) {
		toSerialize["secretKey"] = o.SecretKey
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableEcosystemModel struct {
	value *EcosystemModel
	isSet bool
}

func (v NullableEcosystemModel) Get() *EcosystemModel {
	return v.value
}

func (v *NullableEcosystemModel) Set(val *EcosystemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEcosystemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEcosystemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEcosystemModel(val *EcosystemModel) *NullableEcosystemModel {
	return &NullableEcosystemModel{value: val, isSet: true}
}

func (v NullableEcosystemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEcosystemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


