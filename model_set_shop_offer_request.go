/*
MetaFab API

Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.5.1
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// SetShopOfferRequest struct for SetShopOfferRequest
type SetShopOfferRequest struct {
	// A unique offer id to use for this offer for the shop. If an existing offer id is used, the current offer will be updated but the existing number of uses will be kept. If you want to reset the number of uses for an existing offer, first remove it using the remove offer endpoint, then set it.
	Id int32 `json:"id"`
	// A valid EVM based ERC1155 or MetaFab game items contract address that represents the collection for input items required by this offer. `inputCollectionAddress` or `inputCollectionId` can optionally be provided.
	InputCollectionAddress *string `json:"inputCollectionAddress,omitempty"`
	// A valid MetaFab collection id that represents the collection for input items required by this offer. `inputCollectionAddress` or `inputCollectionId` can optionally be provided.
	InputCollectionId *string `json:"inputCollectionId,omitempty"`
	// An array of item ids from the provided input collection that are required to use this offer. Input items are transferred from the wallet to the shop contract upon using an offer.
	InputCollectionItemIds []int32 `json:"inputCollectionItemIds,omitempty"`
	// An array of amounts for each item id from the provided input collection that are required to use this offer. Item amounts array indices are reflective of the amount required for a given item id at the same index.
	InputCollectionItemAmounts []int32 `json:"inputCollectionItemAmounts,omitempty"`
	// A valid EVM based ERC20 or MetaFab game currency contract address that for the currency required by this offer.
	InputCurrencyAddress *string `json:"inputCurrencyAddress,omitempty"`
	// A valid MetaFab currency id that represents the currency required by this offer.
	InputCurrencyId *string `json:"inputCurrencyId,omitempty"`
	// The amount of currency required by this offer. If an inputCurrencyAmount is provided without in input currency address or id, the native chain currency is used as the required currency.
	InputCurrencyAmount *float32 `json:"inputCurrencyAmount,omitempty"`
	// A valid EVM based ERC1155 or MetaFab game items contract address that represents the collection for output items given by this offer. `outputCollectionAddress` or `outputCollectionId` can optionally be provided.
	OutputCollectionAddress *string `json:"outputCollectionAddress,omitempty"`
	// A valid MetaFab collection id that represents the collection for output items given by this offer. `outputCollectionAddress` or `outputCollectionId` can optionally be provided.
	OutputCollectionId *string `json:"outputCollectionId,omitempty"`
	// An array of item ids from the provided output collection that are given by this offer. Output items are automatically minted if the shop contract has the `minter` role for the output collection contract. Otherwise, they are transferred from the item balance held by the shop contract.
	OutputCollectionItemIds []int32 `json:"outputCollectionItemIds,omitempty"`
	// An array of amounts for each item id from the provided output collection that are given by this offer. Item amounts array indices are reflective of the amount required for a given item id at the same index.
	OutputCollectionItemAmounts []int32 `json:"outputCollectionItemAmounts,omitempty"`
	// A valid EVM based ERC20 or MetaFab game currency contract address that for the currency given by this offer. The output currency amount is automatically minted if the shop contract has the `minter` role for the output currency contract. Otherwise, they are transferred from the currency balance held by the shop contract.
	OutputCurrencyAddress *string `json:"outputCurrencyAddress,omitempty"`
	// A valid MetaFab currency id for the currency given by this offer.
	OutputCurrencyId *string `json:"outputCurrencyId,omitempty"`
	// The amount of currency given by this offer. If an outputCurrencyAmount is provided without an output currency address or id, the native chain currency is used as the given currency.
	OutputCurrencyAmount *float32 `json:"outputCurrencyAmount,omitempty"`
	// The maximum number of times this offer can be used in total. maxUses is collective across all uses of the offer. If 5 unique players use an offer, that counts as 5 offer uses. Exclude this or use 0 to allow unlimited uses.
	MaxUses *int32 `json:"maxUses,omitempty"`
}

// NewSetShopOfferRequest instantiates a new SetShopOfferRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetShopOfferRequest(id int32) *SetShopOfferRequest {
	this := SetShopOfferRequest{}
	this.Id = id
	return &this
}

// NewSetShopOfferRequestWithDefaults instantiates a new SetShopOfferRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetShopOfferRequestWithDefaults() *SetShopOfferRequest {
	this := SetShopOfferRequest{}
	return &this
}

// GetId returns the Id field value
func (o *SetShopOfferRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SetShopOfferRequest) SetId(v int32) {
	o.Id = v
}

// GetInputCollectionAddress returns the InputCollectionAddress field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetInputCollectionAddress() string {
	if o == nil || isNil(o.InputCollectionAddress) {
		var ret string
		return ret
	}
	return *o.InputCollectionAddress
}

// GetInputCollectionAddressOk returns a tuple with the InputCollectionAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetInputCollectionAddressOk() (*string, bool) {
	if o == nil || isNil(o.InputCollectionAddress) {
    return nil, false
	}
	return o.InputCollectionAddress, true
}

// HasInputCollectionAddress returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasInputCollectionAddress() bool {
	if o != nil && !isNil(o.InputCollectionAddress) {
		return true
	}

	return false
}

// SetInputCollectionAddress gets a reference to the given string and assigns it to the InputCollectionAddress field.
func (o *SetShopOfferRequest) SetInputCollectionAddress(v string) {
	o.InputCollectionAddress = &v
}

// GetInputCollectionId returns the InputCollectionId field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetInputCollectionId() string {
	if o == nil || isNil(o.InputCollectionId) {
		var ret string
		return ret
	}
	return *o.InputCollectionId
}

// GetInputCollectionIdOk returns a tuple with the InputCollectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetInputCollectionIdOk() (*string, bool) {
	if o == nil || isNil(o.InputCollectionId) {
    return nil, false
	}
	return o.InputCollectionId, true
}

// HasInputCollectionId returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasInputCollectionId() bool {
	if o != nil && !isNil(o.InputCollectionId) {
		return true
	}

	return false
}

// SetInputCollectionId gets a reference to the given string and assigns it to the InputCollectionId field.
func (o *SetShopOfferRequest) SetInputCollectionId(v string) {
	o.InputCollectionId = &v
}

// GetInputCollectionItemIds returns the InputCollectionItemIds field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetInputCollectionItemIds() []int32 {
	if o == nil || isNil(o.InputCollectionItemIds) {
		var ret []int32
		return ret
	}
	return o.InputCollectionItemIds
}

// GetInputCollectionItemIdsOk returns a tuple with the InputCollectionItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetInputCollectionItemIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.InputCollectionItemIds) {
    return nil, false
	}
	return o.InputCollectionItemIds, true
}

// HasInputCollectionItemIds returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasInputCollectionItemIds() bool {
	if o != nil && !isNil(o.InputCollectionItemIds) {
		return true
	}

	return false
}

// SetInputCollectionItemIds gets a reference to the given []int32 and assigns it to the InputCollectionItemIds field.
func (o *SetShopOfferRequest) SetInputCollectionItemIds(v []int32) {
	o.InputCollectionItemIds = v
}

// GetInputCollectionItemAmounts returns the InputCollectionItemAmounts field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetInputCollectionItemAmounts() []int32 {
	if o == nil || isNil(o.InputCollectionItemAmounts) {
		var ret []int32
		return ret
	}
	return o.InputCollectionItemAmounts
}

// GetInputCollectionItemAmountsOk returns a tuple with the InputCollectionItemAmounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetInputCollectionItemAmountsOk() ([]int32, bool) {
	if o == nil || isNil(o.InputCollectionItemAmounts) {
    return nil, false
	}
	return o.InputCollectionItemAmounts, true
}

// HasInputCollectionItemAmounts returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasInputCollectionItemAmounts() bool {
	if o != nil && !isNil(o.InputCollectionItemAmounts) {
		return true
	}

	return false
}

// SetInputCollectionItemAmounts gets a reference to the given []int32 and assigns it to the InputCollectionItemAmounts field.
func (o *SetShopOfferRequest) SetInputCollectionItemAmounts(v []int32) {
	o.InputCollectionItemAmounts = v
}

// GetInputCurrencyAddress returns the InputCurrencyAddress field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetInputCurrencyAddress() string {
	if o == nil || isNil(o.InputCurrencyAddress) {
		var ret string
		return ret
	}
	return *o.InputCurrencyAddress
}

// GetInputCurrencyAddressOk returns a tuple with the InputCurrencyAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetInputCurrencyAddressOk() (*string, bool) {
	if o == nil || isNil(o.InputCurrencyAddress) {
    return nil, false
	}
	return o.InputCurrencyAddress, true
}

// HasInputCurrencyAddress returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasInputCurrencyAddress() bool {
	if o != nil && !isNil(o.InputCurrencyAddress) {
		return true
	}

	return false
}

// SetInputCurrencyAddress gets a reference to the given string and assigns it to the InputCurrencyAddress field.
func (o *SetShopOfferRequest) SetInputCurrencyAddress(v string) {
	o.InputCurrencyAddress = &v
}

// GetInputCurrencyId returns the InputCurrencyId field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetInputCurrencyId() string {
	if o == nil || isNil(o.InputCurrencyId) {
		var ret string
		return ret
	}
	return *o.InputCurrencyId
}

// GetInputCurrencyIdOk returns a tuple with the InputCurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetInputCurrencyIdOk() (*string, bool) {
	if o == nil || isNil(o.InputCurrencyId) {
    return nil, false
	}
	return o.InputCurrencyId, true
}

// HasInputCurrencyId returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasInputCurrencyId() bool {
	if o != nil && !isNil(o.InputCurrencyId) {
		return true
	}

	return false
}

// SetInputCurrencyId gets a reference to the given string and assigns it to the InputCurrencyId field.
func (o *SetShopOfferRequest) SetInputCurrencyId(v string) {
	o.InputCurrencyId = &v
}

// GetInputCurrencyAmount returns the InputCurrencyAmount field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetInputCurrencyAmount() float32 {
	if o == nil || isNil(o.InputCurrencyAmount) {
		var ret float32
		return ret
	}
	return *o.InputCurrencyAmount
}

// GetInputCurrencyAmountOk returns a tuple with the InputCurrencyAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetInputCurrencyAmountOk() (*float32, bool) {
	if o == nil || isNil(o.InputCurrencyAmount) {
    return nil, false
	}
	return o.InputCurrencyAmount, true
}

// HasInputCurrencyAmount returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasInputCurrencyAmount() bool {
	if o != nil && !isNil(o.InputCurrencyAmount) {
		return true
	}

	return false
}

// SetInputCurrencyAmount gets a reference to the given float32 and assigns it to the InputCurrencyAmount field.
func (o *SetShopOfferRequest) SetInputCurrencyAmount(v float32) {
	o.InputCurrencyAmount = &v
}

// GetOutputCollectionAddress returns the OutputCollectionAddress field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetOutputCollectionAddress() string {
	if o == nil || isNil(o.OutputCollectionAddress) {
		var ret string
		return ret
	}
	return *o.OutputCollectionAddress
}

// GetOutputCollectionAddressOk returns a tuple with the OutputCollectionAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetOutputCollectionAddressOk() (*string, bool) {
	if o == nil || isNil(o.OutputCollectionAddress) {
    return nil, false
	}
	return o.OutputCollectionAddress, true
}

// HasOutputCollectionAddress returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasOutputCollectionAddress() bool {
	if o != nil && !isNil(o.OutputCollectionAddress) {
		return true
	}

	return false
}

// SetOutputCollectionAddress gets a reference to the given string and assigns it to the OutputCollectionAddress field.
func (o *SetShopOfferRequest) SetOutputCollectionAddress(v string) {
	o.OutputCollectionAddress = &v
}

// GetOutputCollectionId returns the OutputCollectionId field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetOutputCollectionId() string {
	if o == nil || isNil(o.OutputCollectionId) {
		var ret string
		return ret
	}
	return *o.OutputCollectionId
}

// GetOutputCollectionIdOk returns a tuple with the OutputCollectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetOutputCollectionIdOk() (*string, bool) {
	if o == nil || isNil(o.OutputCollectionId) {
    return nil, false
	}
	return o.OutputCollectionId, true
}

// HasOutputCollectionId returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasOutputCollectionId() bool {
	if o != nil && !isNil(o.OutputCollectionId) {
		return true
	}

	return false
}

// SetOutputCollectionId gets a reference to the given string and assigns it to the OutputCollectionId field.
func (o *SetShopOfferRequest) SetOutputCollectionId(v string) {
	o.OutputCollectionId = &v
}

// GetOutputCollectionItemIds returns the OutputCollectionItemIds field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetOutputCollectionItemIds() []int32 {
	if o == nil || isNil(o.OutputCollectionItemIds) {
		var ret []int32
		return ret
	}
	return o.OutputCollectionItemIds
}

// GetOutputCollectionItemIdsOk returns a tuple with the OutputCollectionItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetOutputCollectionItemIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.OutputCollectionItemIds) {
    return nil, false
	}
	return o.OutputCollectionItemIds, true
}

// HasOutputCollectionItemIds returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasOutputCollectionItemIds() bool {
	if o != nil && !isNil(o.OutputCollectionItemIds) {
		return true
	}

	return false
}

// SetOutputCollectionItemIds gets a reference to the given []int32 and assigns it to the OutputCollectionItemIds field.
func (o *SetShopOfferRequest) SetOutputCollectionItemIds(v []int32) {
	o.OutputCollectionItemIds = v
}

// GetOutputCollectionItemAmounts returns the OutputCollectionItemAmounts field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetOutputCollectionItemAmounts() []int32 {
	if o == nil || isNil(o.OutputCollectionItemAmounts) {
		var ret []int32
		return ret
	}
	return o.OutputCollectionItemAmounts
}

// GetOutputCollectionItemAmountsOk returns a tuple with the OutputCollectionItemAmounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetOutputCollectionItemAmountsOk() ([]int32, bool) {
	if o == nil || isNil(o.OutputCollectionItemAmounts) {
    return nil, false
	}
	return o.OutputCollectionItemAmounts, true
}

// HasOutputCollectionItemAmounts returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasOutputCollectionItemAmounts() bool {
	if o != nil && !isNil(o.OutputCollectionItemAmounts) {
		return true
	}

	return false
}

// SetOutputCollectionItemAmounts gets a reference to the given []int32 and assigns it to the OutputCollectionItemAmounts field.
func (o *SetShopOfferRequest) SetOutputCollectionItemAmounts(v []int32) {
	o.OutputCollectionItemAmounts = v
}

// GetOutputCurrencyAddress returns the OutputCurrencyAddress field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetOutputCurrencyAddress() string {
	if o == nil || isNil(o.OutputCurrencyAddress) {
		var ret string
		return ret
	}
	return *o.OutputCurrencyAddress
}

// GetOutputCurrencyAddressOk returns a tuple with the OutputCurrencyAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetOutputCurrencyAddressOk() (*string, bool) {
	if o == nil || isNil(o.OutputCurrencyAddress) {
    return nil, false
	}
	return o.OutputCurrencyAddress, true
}

// HasOutputCurrencyAddress returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasOutputCurrencyAddress() bool {
	if o != nil && !isNil(o.OutputCurrencyAddress) {
		return true
	}

	return false
}

// SetOutputCurrencyAddress gets a reference to the given string and assigns it to the OutputCurrencyAddress field.
func (o *SetShopOfferRequest) SetOutputCurrencyAddress(v string) {
	o.OutputCurrencyAddress = &v
}

// GetOutputCurrencyId returns the OutputCurrencyId field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetOutputCurrencyId() string {
	if o == nil || isNil(o.OutputCurrencyId) {
		var ret string
		return ret
	}
	return *o.OutputCurrencyId
}

// GetOutputCurrencyIdOk returns a tuple with the OutputCurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetOutputCurrencyIdOk() (*string, bool) {
	if o == nil || isNil(o.OutputCurrencyId) {
    return nil, false
	}
	return o.OutputCurrencyId, true
}

// HasOutputCurrencyId returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasOutputCurrencyId() bool {
	if o != nil && !isNil(o.OutputCurrencyId) {
		return true
	}

	return false
}

// SetOutputCurrencyId gets a reference to the given string and assigns it to the OutputCurrencyId field.
func (o *SetShopOfferRequest) SetOutputCurrencyId(v string) {
	o.OutputCurrencyId = &v
}

// GetOutputCurrencyAmount returns the OutputCurrencyAmount field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetOutputCurrencyAmount() float32 {
	if o == nil || isNil(o.OutputCurrencyAmount) {
		var ret float32
		return ret
	}
	return *o.OutputCurrencyAmount
}

// GetOutputCurrencyAmountOk returns a tuple with the OutputCurrencyAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetOutputCurrencyAmountOk() (*float32, bool) {
	if o == nil || isNil(o.OutputCurrencyAmount) {
    return nil, false
	}
	return o.OutputCurrencyAmount, true
}

// HasOutputCurrencyAmount returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasOutputCurrencyAmount() bool {
	if o != nil && !isNil(o.OutputCurrencyAmount) {
		return true
	}

	return false
}

// SetOutputCurrencyAmount gets a reference to the given float32 and assigns it to the OutputCurrencyAmount field.
func (o *SetShopOfferRequest) SetOutputCurrencyAmount(v float32) {
	o.OutputCurrencyAmount = &v
}

// GetMaxUses returns the MaxUses field value if set, zero value otherwise.
func (o *SetShopOfferRequest) GetMaxUses() int32 {
	if o == nil || isNil(o.MaxUses) {
		var ret int32
		return ret
	}
	return *o.MaxUses
}

// GetMaxUsesOk returns a tuple with the MaxUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetShopOfferRequest) GetMaxUsesOk() (*int32, bool) {
	if o == nil || isNil(o.MaxUses) {
    return nil, false
	}
	return o.MaxUses, true
}

// HasMaxUses returns a boolean if a field has been set.
func (o *SetShopOfferRequest) HasMaxUses() bool {
	if o != nil && !isNil(o.MaxUses) {
		return true
	}

	return false
}

// SetMaxUses gets a reference to the given int32 and assigns it to the MaxUses field.
func (o *SetShopOfferRequest) SetMaxUses(v int32) {
	o.MaxUses = &v
}

func (o SetShopOfferRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.InputCollectionAddress) {
		toSerialize["inputCollectionAddress"] = o.InputCollectionAddress
	}
	if !isNil(o.InputCollectionId) {
		toSerialize["inputCollectionId"] = o.InputCollectionId
	}
	if !isNil(o.InputCollectionItemIds) {
		toSerialize["inputCollectionItemIds"] = o.InputCollectionItemIds
	}
	if !isNil(o.InputCollectionItemAmounts) {
		toSerialize["inputCollectionItemAmounts"] = o.InputCollectionItemAmounts
	}
	if !isNil(o.InputCurrencyAddress) {
		toSerialize["inputCurrencyAddress"] = o.InputCurrencyAddress
	}
	if !isNil(o.InputCurrencyId) {
		toSerialize["inputCurrencyId"] = o.InputCurrencyId
	}
	if !isNil(o.InputCurrencyAmount) {
		toSerialize["inputCurrencyAmount"] = o.InputCurrencyAmount
	}
	if !isNil(o.OutputCollectionAddress) {
		toSerialize["outputCollectionAddress"] = o.OutputCollectionAddress
	}
	if !isNil(o.OutputCollectionId) {
		toSerialize["outputCollectionId"] = o.OutputCollectionId
	}
	if !isNil(o.OutputCollectionItemIds) {
		toSerialize["outputCollectionItemIds"] = o.OutputCollectionItemIds
	}
	if !isNil(o.OutputCollectionItemAmounts) {
		toSerialize["outputCollectionItemAmounts"] = o.OutputCollectionItemAmounts
	}
	if !isNil(o.OutputCurrencyAddress) {
		toSerialize["outputCurrencyAddress"] = o.OutputCurrencyAddress
	}
	if !isNil(o.OutputCurrencyId) {
		toSerialize["outputCurrencyId"] = o.OutputCurrencyId
	}
	if !isNil(o.OutputCurrencyAmount) {
		toSerialize["outputCurrencyAmount"] = o.OutputCurrencyAmount
	}
	if !isNil(o.MaxUses) {
		toSerialize["maxUses"] = o.MaxUses
	}
	return json.Marshal(toSerialize)
}

type NullableSetShopOfferRequest struct {
	value *SetShopOfferRequest
	isSet bool
}

func (v NullableSetShopOfferRequest) Get() *SetShopOfferRequest {
	return v.value
}

func (v *NullableSetShopOfferRequest) Set(val *SetShopOfferRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetShopOfferRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetShopOfferRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetShopOfferRequest(val *SetShopOfferRequest) *NullableSetShopOfferRequest {
	return &NullableSetShopOfferRequest{value: val, isSet: true}
}

func (v NullableSetShopOfferRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetShopOfferRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


