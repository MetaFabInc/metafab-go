/*
MetaFab API

 Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.4.0
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// SetPlayerConnectedWalletRequest struct for SetPlayerConnectedWalletRequest
type SetPlayerConnectedWalletRequest struct {
	// The address of the external wallet to connect to the player.
	Address string `json:"address"`
	// Any positive integer that hasn't been used previously to connect or disconnect this external wallet. Must be the same nonce used to generate the `signature`.
	Nonce int32 `json:"nonce"`
	// A signature string generated by signing a keccak256 hash generated with abiCoder encode arguments of `[ 'bytes32', 'address', 'bool', 'address', 'uint256' ]` and `[ keccak256(gameId), delegate wallet approved (player's custodial wallet address), true, external wallet address, any unused nonce number ]`.
	Signature string `json:"signature"`
	// The blockchain you want to support this wallet connection on. If you need to support multiple blockchains, make multiple requests using different `chain` arguments. Support for new blockchains are added over time.
	Chain string `json:"chain"`
}

// NewSetPlayerConnectedWalletRequest instantiates a new SetPlayerConnectedWalletRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetPlayerConnectedWalletRequest(address string, nonce int32, signature string, chain string) *SetPlayerConnectedWalletRequest {
	this := SetPlayerConnectedWalletRequest{}
	this.Address = address
	this.Nonce = nonce
	this.Signature = signature
	this.Chain = chain
	return &this
}

// NewSetPlayerConnectedWalletRequestWithDefaults instantiates a new SetPlayerConnectedWalletRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetPlayerConnectedWalletRequestWithDefaults() *SetPlayerConnectedWalletRequest {
	this := SetPlayerConnectedWalletRequest{}
	return &this
}

// GetAddress returns the Address field value
func (o *SetPlayerConnectedWalletRequest) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *SetPlayerConnectedWalletRequest) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *SetPlayerConnectedWalletRequest) SetAddress(v string) {
	o.Address = v
}

// GetNonce returns the Nonce field value
func (o *SetPlayerConnectedWalletRequest) GetNonce() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *SetPlayerConnectedWalletRequest) GetNonceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *SetPlayerConnectedWalletRequest) SetNonce(v int32) {
	o.Nonce = v
}

// GetSignature returns the Signature field value
func (o *SetPlayerConnectedWalletRequest) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *SetPlayerConnectedWalletRequest) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *SetPlayerConnectedWalletRequest) SetSignature(v string) {
	o.Signature = v
}

// GetChain returns the Chain field value
func (o *SetPlayerConnectedWalletRequest) GetChain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Chain
}

// GetChainOk returns a tuple with the Chain field value
// and a boolean to check if the value has been set.
func (o *SetPlayerConnectedWalletRequest) GetChainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Chain, true
}

// SetChain sets field value
func (o *SetPlayerConnectedWalletRequest) SetChain(v string) {
	o.Chain = v
}

func (o SetPlayerConnectedWalletRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["nonce"] = o.Nonce
	}
	if true {
		toSerialize["signature"] = o.Signature
	}
	if true {
		toSerialize["chain"] = o.Chain
	}
	return json.Marshal(toSerialize)
}

type NullableSetPlayerConnectedWalletRequest struct {
	value *SetPlayerConnectedWalletRequest
	isSet bool
}

func (v NullableSetPlayerConnectedWalletRequest) Get() *SetPlayerConnectedWalletRequest {
	return v.value
}

func (v *NullableSetPlayerConnectedWalletRequest) Set(val *SetPlayerConnectedWalletRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetPlayerConnectedWalletRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetPlayerConnectedWalletRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetPlayerConnectedWalletRequest(val *SetPlayerConnectedWalletRequest) *NullableSetPlayerConnectedWalletRequest {
	return &NullableSetPlayerConnectedWalletRequest{value: val, isSet: true}
}

func (v NullableSetPlayerConnectedWalletRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetPlayerConnectedWalletRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


