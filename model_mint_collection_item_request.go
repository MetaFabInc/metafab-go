/*
MetaFab API

 Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.4.0
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// MintCollectionItemRequest struct for MintCollectionItemRequest
type MintCollectionItemRequest struct {
	// A valid EVM based address to create (mint) the item(s) for. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`.
	Address *string `json:"address,omitempty"`
	// The quantity of the specified item id to create (mint).
	Quantity int32 `json:"quantity"`
	// Any wallet id within the MetaFab ecosystem to create (mint) the item(s) for.
	WalletId *string `json:"walletId,omitempty"`
}

// NewMintCollectionItemRequest instantiates a new MintCollectionItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMintCollectionItemRequest(quantity int32) *MintCollectionItemRequest {
	this := MintCollectionItemRequest{}
	this.Quantity = quantity
	return &this
}

// NewMintCollectionItemRequestWithDefaults instantiates a new MintCollectionItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMintCollectionItemRequestWithDefaults() *MintCollectionItemRequest {
	this := MintCollectionItemRequest{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *MintCollectionItemRequest) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintCollectionItemRequest) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *MintCollectionItemRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *MintCollectionItemRequest) SetAddress(v string) {
	o.Address = &v
}

// GetQuantity returns the Quantity field value
func (o *MintCollectionItemRequest) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *MintCollectionItemRequest) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *MintCollectionItemRequest) SetQuantity(v int32) {
	o.Quantity = v
}

// GetWalletId returns the WalletId field value if set, zero value otherwise.
func (o *MintCollectionItemRequest) GetWalletId() string {
	if o == nil || o.WalletId == nil {
		var ret string
		return ret
	}
	return *o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintCollectionItemRequest) GetWalletIdOk() (*string, bool) {
	if o == nil || o.WalletId == nil {
		return nil, false
	}
	return o.WalletId, true
}

// HasWalletId returns a boolean if a field has been set.
func (o *MintCollectionItemRequest) HasWalletId() bool {
	if o != nil && o.WalletId != nil {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given string and assigns it to the WalletId field.
func (o *MintCollectionItemRequest) SetWalletId(v string) {
	o.WalletId = &v
}

func (o MintCollectionItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["quantity"] = o.Quantity
	}
	if o.WalletId != nil {
		toSerialize["walletId"] = o.WalletId
	}
	return json.Marshal(toSerialize)
}

type NullableMintCollectionItemRequest struct {
	value *MintCollectionItemRequest
	isSet bool
}

func (v NullableMintCollectionItemRequest) Get() *MintCollectionItemRequest {
	return v.value
}

func (v *NullableMintCollectionItemRequest) Set(val *MintCollectionItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMintCollectionItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMintCollectionItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMintCollectionItemRequest(val *MintCollectionItemRequest) *NullableMintCollectionItemRequest {
	return &NullableMintCollectionItemRequest{value: val, isSet: true}
}

func (v NullableMintCollectionItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMintCollectionItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


