/*
MetaFab API

Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.5.1
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// CreateProfileRequest struct for CreateProfileRequest
type CreateProfileRequest struct {
	// The profile's username, used to authenticate the profile. Profile usernames are globally unique across MetaFab. There cannot be 2 profiles with the same username created.
	Username string `json:"username"`
	// The password to authenticate as the profile. Additionally, this password is used to encrypt/decrypt a profile's primary wallet and must be provided anytime this profile makes blockchain interactions through various endpoints.
	Password string `json:"password"`
}

// NewCreateProfileRequest instantiates a new CreateProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProfileRequest(username string, password string) *CreateProfileRequest {
	this := CreateProfileRequest{}
	this.Username = username
	this.Password = password
	return &this
}

// NewCreateProfileRequestWithDefaults instantiates a new CreateProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProfileRequestWithDefaults() *CreateProfileRequest {
	this := CreateProfileRequest{}
	return &this
}

// GetUsername returns the Username field value
func (o *CreateProfileRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *CreateProfileRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *CreateProfileRequest) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *CreateProfileRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *CreateProfileRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *CreateProfileRequest) SetPassword(v string) {
	o.Password = v
}

func (o CreateProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableCreateProfileRequest struct {
	value *CreateProfileRequest
	isSet bool
}

func (v NullableCreateProfileRequest) Get() *CreateProfileRequest {
	return v.value
}

func (v *NullableCreateProfileRequest) Set(val *CreateProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProfileRequest(val *CreateProfileRequest) *NullableCreateProfileRequest {
	return &NullableCreateProfileRequest{value: val, isSet: true}
}

func (v NullableCreateProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


