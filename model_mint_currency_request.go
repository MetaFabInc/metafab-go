/*
MetaFab API

 Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.4.1
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// MintCurrencyRequest struct for MintCurrencyRequest
type MintCurrencyRequest struct {
	// The amount of currency to create (mint).
	Amount float32 `json:"amount"`
	// A valid EVM based address to create (mint) currency for. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`.
	Address *string `json:"address,omitempty"`
	// Any wallet id within the MetaFab ecosystem to create (mint) currency for.
	WalletId *string `json:"walletId,omitempty"`
}

// NewMintCurrencyRequest instantiates a new MintCurrencyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMintCurrencyRequest(amount float32) *MintCurrencyRequest {
	this := MintCurrencyRequest{}
	this.Amount = amount
	return &this
}

// NewMintCurrencyRequestWithDefaults instantiates a new MintCurrencyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMintCurrencyRequestWithDefaults() *MintCurrencyRequest {
	this := MintCurrencyRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *MintCurrencyRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *MintCurrencyRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *MintCurrencyRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *MintCurrencyRequest) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintCurrencyRequest) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *MintCurrencyRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *MintCurrencyRequest) SetAddress(v string) {
	o.Address = &v
}

// GetWalletId returns the WalletId field value if set, zero value otherwise.
func (o *MintCurrencyRequest) GetWalletId() string {
	if o == nil || o.WalletId == nil {
		var ret string
		return ret
	}
	return *o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintCurrencyRequest) GetWalletIdOk() (*string, bool) {
	if o == nil || o.WalletId == nil {
		return nil, false
	}
	return o.WalletId, true
}

// HasWalletId returns a boolean if a field has been set.
func (o *MintCurrencyRequest) HasWalletId() bool {
	if o != nil && o.WalletId != nil {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given string and assigns it to the WalletId field.
func (o *MintCurrencyRequest) SetWalletId(v string) {
	o.WalletId = &v
}

func (o MintCurrencyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.WalletId != nil {
		toSerialize["walletId"] = o.WalletId
	}
	return json.Marshal(toSerialize)
}

type NullableMintCurrencyRequest struct {
	value *MintCurrencyRequest
	isSet bool
}

func (v NullableMintCurrencyRequest) Get() *MintCurrencyRequest {
	return v.value
}

func (v *NullableMintCurrencyRequest) Set(val *MintCurrencyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMintCurrencyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMintCurrencyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMintCurrencyRequest(val *MintCurrencyRequest) *NullableMintCurrencyRequest {
	return &NullableMintCurrencyRequest{value: val, isSet: true}
}

func (v NullableMintCurrencyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMintCurrencyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


