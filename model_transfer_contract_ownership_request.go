/*
MetaFab API

 Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.4.0
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// TransferContractOwnershipRequest struct for TransferContractOwnershipRequest
type TransferContractOwnershipRequest struct {
	// A wallet address to assign as the new owner and administrator of the target smart contract.
	OwnerAddress string `json:"ownerAddress"`
}

// NewTransferContractOwnershipRequest instantiates a new TransferContractOwnershipRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferContractOwnershipRequest(ownerAddress string) *TransferContractOwnershipRequest {
	this := TransferContractOwnershipRequest{}
	this.OwnerAddress = ownerAddress
	return &this
}

// NewTransferContractOwnershipRequestWithDefaults instantiates a new TransferContractOwnershipRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferContractOwnershipRequestWithDefaults() *TransferContractOwnershipRequest {
	this := TransferContractOwnershipRequest{}
	return &this
}

// GetOwnerAddress returns the OwnerAddress field value
func (o *TransferContractOwnershipRequest) GetOwnerAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerAddress
}

// GetOwnerAddressOk returns a tuple with the OwnerAddress field value
// and a boolean to check if the value has been set.
func (o *TransferContractOwnershipRequest) GetOwnerAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerAddress, true
}

// SetOwnerAddress sets field value
func (o *TransferContractOwnershipRequest) SetOwnerAddress(v string) {
	o.OwnerAddress = v
}

func (o TransferContractOwnershipRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ownerAddress"] = o.OwnerAddress
	}
	return json.Marshal(toSerialize)
}

type NullableTransferContractOwnershipRequest struct {
	value *TransferContractOwnershipRequest
	isSet bool
}

func (v NullableTransferContractOwnershipRequest) Get() *TransferContractOwnershipRequest {
	return v.value
}

func (v *NullableTransferContractOwnershipRequest) Set(val *TransferContractOwnershipRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferContractOwnershipRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferContractOwnershipRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferContractOwnershipRequest(val *TransferContractOwnershipRequest) *NullableTransferContractOwnershipRequest {
	return &NullableTransferContractOwnershipRequest{value: val, isSet: true}
}

func (v NullableTransferContractOwnershipRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferContractOwnershipRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


