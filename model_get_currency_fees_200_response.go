/*
MetaFab API

 Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.3.0
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// GetCurrencyFees200Response struct for GetCurrencyFees200Response
type GetCurrencyFees200Response struct {
	// The wallet address that fees from all applicable transactions are automatically sent to.
	RecipientAddress *string `json:"recipientAddress,omitempty"`
	// The number of fee basis points. 100 basisPoints = 1% fee of the total transaction amount deducted from the total received by the recipient.
	BasisPoints *float32 `json:"basisPoints,omitempty"`
	// The fixed number of currency as a fee regardless of the total transaction amount. 10 = 10 of the currency as a fee for any transaction, deducted from the total received by the recipient.
	FixedAmount *float32 `json:"fixedAmount,omitempty"`
	// The maximum combined fee between basisPoints and fixedAmount. If the total transaction fee is over this amount, the capAmount will be used as the transaction fee deducted from the total received by the recipient.
	CapAmount *float32 `json:"capAmount,omitempty"`
}

// NewGetCurrencyFees200Response instantiates a new GetCurrencyFees200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCurrencyFees200Response() *GetCurrencyFees200Response {
	this := GetCurrencyFees200Response{}
	return &this
}

// NewGetCurrencyFees200ResponseWithDefaults instantiates a new GetCurrencyFees200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCurrencyFees200ResponseWithDefaults() *GetCurrencyFees200Response {
	this := GetCurrencyFees200Response{}
	return &this
}

// GetRecipientAddress returns the RecipientAddress field value if set, zero value otherwise.
func (o *GetCurrencyFees200Response) GetRecipientAddress() string {
	if o == nil || o.RecipientAddress == nil {
		var ret string
		return ret
	}
	return *o.RecipientAddress
}

// GetRecipientAddressOk returns a tuple with the RecipientAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCurrencyFees200Response) GetRecipientAddressOk() (*string, bool) {
	if o == nil || o.RecipientAddress == nil {
		return nil, false
	}
	return o.RecipientAddress, true
}

// HasRecipientAddress returns a boolean if a field has been set.
func (o *GetCurrencyFees200Response) HasRecipientAddress() bool {
	if o != nil && o.RecipientAddress != nil {
		return true
	}

	return false
}

// SetRecipientAddress gets a reference to the given string and assigns it to the RecipientAddress field.
func (o *GetCurrencyFees200Response) SetRecipientAddress(v string) {
	o.RecipientAddress = &v
}

// GetBasisPoints returns the BasisPoints field value if set, zero value otherwise.
func (o *GetCurrencyFees200Response) GetBasisPoints() float32 {
	if o == nil || o.BasisPoints == nil {
		var ret float32
		return ret
	}
	return *o.BasisPoints
}

// GetBasisPointsOk returns a tuple with the BasisPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCurrencyFees200Response) GetBasisPointsOk() (*float32, bool) {
	if o == nil || o.BasisPoints == nil {
		return nil, false
	}
	return o.BasisPoints, true
}

// HasBasisPoints returns a boolean if a field has been set.
func (o *GetCurrencyFees200Response) HasBasisPoints() bool {
	if o != nil && o.BasisPoints != nil {
		return true
	}

	return false
}

// SetBasisPoints gets a reference to the given float32 and assigns it to the BasisPoints field.
func (o *GetCurrencyFees200Response) SetBasisPoints(v float32) {
	o.BasisPoints = &v
}

// GetFixedAmount returns the FixedAmount field value if set, zero value otherwise.
func (o *GetCurrencyFees200Response) GetFixedAmount() float32 {
	if o == nil || o.FixedAmount == nil {
		var ret float32
		return ret
	}
	return *o.FixedAmount
}

// GetFixedAmountOk returns a tuple with the FixedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCurrencyFees200Response) GetFixedAmountOk() (*float32, bool) {
	if o == nil || o.FixedAmount == nil {
		return nil, false
	}
	return o.FixedAmount, true
}

// HasFixedAmount returns a boolean if a field has been set.
func (o *GetCurrencyFees200Response) HasFixedAmount() bool {
	if o != nil && o.FixedAmount != nil {
		return true
	}

	return false
}

// SetFixedAmount gets a reference to the given float32 and assigns it to the FixedAmount field.
func (o *GetCurrencyFees200Response) SetFixedAmount(v float32) {
	o.FixedAmount = &v
}

// GetCapAmount returns the CapAmount field value if set, zero value otherwise.
func (o *GetCurrencyFees200Response) GetCapAmount() float32 {
	if o == nil || o.CapAmount == nil {
		var ret float32
		return ret
	}
	return *o.CapAmount
}

// GetCapAmountOk returns a tuple with the CapAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCurrencyFees200Response) GetCapAmountOk() (*float32, bool) {
	if o == nil || o.CapAmount == nil {
		return nil, false
	}
	return o.CapAmount, true
}

// HasCapAmount returns a boolean if a field has been set.
func (o *GetCurrencyFees200Response) HasCapAmount() bool {
	if o != nil && o.CapAmount != nil {
		return true
	}

	return false
}

// SetCapAmount gets a reference to the given float32 and assigns it to the CapAmount field.
func (o *GetCurrencyFees200Response) SetCapAmount(v float32) {
	o.CapAmount = &v
}

func (o GetCurrencyFees200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RecipientAddress != nil {
		toSerialize["recipientAddress"] = o.RecipientAddress
	}
	if o.BasisPoints != nil {
		toSerialize["basisPoints"] = o.BasisPoints
	}
	if o.FixedAmount != nil {
		toSerialize["fixedAmount"] = o.FixedAmount
	}
	if o.CapAmount != nil {
		toSerialize["capAmount"] = o.CapAmount
	}
	return json.Marshal(toSerialize)
}

type NullableGetCurrencyFees200Response struct {
	value *GetCurrencyFees200Response
	isSet bool
}

func (v NullableGetCurrencyFees200Response) Get() *GetCurrencyFees200Response {
	return v.value
}

func (v *NullableGetCurrencyFees200Response) Set(val *GetCurrencyFees200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCurrencyFees200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCurrencyFees200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCurrencyFees200Response(val *GetCurrencyFees200Response) *NullableGetCurrencyFees200Response {
	return &NullableGetCurrencyFees200Response{value: val, isSet: true}
}

func (v NullableGetCurrencyFees200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCurrencyFees200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


