/*
MetaFab API

Complete MetaFab API references and guides can be found at: https://trymetafab.com

API version: 1.5.1
Contact: metafabproject@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metafab

import (
	"encoding/json"
)

// CreateProfilePlayerRequest struct for CreateProfilePlayerRequest
type CreateProfilePlayerRequest struct {
	// The username to assign to the created player.
	Username string `json:"username"`
	// A properly formatted permissions object that validates against the MetaFab profile permissions schema.
	Permissions *map[string]ProfilePermissionsValue `json:"permissions,omitempty"`
}

// NewCreateProfilePlayerRequest instantiates a new CreateProfilePlayerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProfilePlayerRequest(username string) *CreateProfilePlayerRequest {
	this := CreateProfilePlayerRequest{}
	this.Username = username
	return &this
}

// NewCreateProfilePlayerRequestWithDefaults instantiates a new CreateProfilePlayerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProfilePlayerRequestWithDefaults() *CreateProfilePlayerRequest {
	this := CreateProfilePlayerRequest{}
	return &this
}

// GetUsername returns the Username field value
func (o *CreateProfilePlayerRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *CreateProfilePlayerRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *CreateProfilePlayerRequest) SetUsername(v string) {
	o.Username = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *CreateProfilePlayerRequest) GetPermissions() map[string]ProfilePermissionsValue {
	if o == nil || isNil(o.Permissions) {
		var ret map[string]ProfilePermissionsValue
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProfilePlayerRequest) GetPermissionsOk() (*map[string]ProfilePermissionsValue, bool) {
	if o == nil || isNil(o.Permissions) {
    return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *CreateProfilePlayerRequest) HasPermissions() bool {
	if o != nil && !isNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given map[string]ProfilePermissionsValue and assigns it to the Permissions field.
func (o *CreateProfilePlayerRequest) SetPermissions(v map[string]ProfilePermissionsValue) {
	o.Permissions = &v
}

func (o CreateProfilePlayerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if !isNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableCreateProfilePlayerRequest struct {
	value *CreateProfilePlayerRequest
	isSet bool
}

func (v NullableCreateProfilePlayerRequest) Get() *CreateProfilePlayerRequest {
	return v.value
}

func (v *NullableCreateProfilePlayerRequest) Set(val *CreateProfilePlayerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProfilePlayerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProfilePlayerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProfilePlayerRequest(val *CreateProfilePlayerRequest) *NullableCreateProfilePlayerRequest {
	return &NullableCreateProfilePlayerRequest{value: val, isSet: true}
}

func (v NullableCreateProfilePlayerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProfilePlayerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


